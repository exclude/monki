# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-12-02 05:44
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import monki.boards.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Address')),
                ('reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reason')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expired at')),
                ('banned_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Banned by')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='banners/', verbose_name='Image')),
                ('nsfw', models.BooleanField(default=True, verbose_name='NSFW')),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
                ('directory', models.CharField(db_index=True, max_length=8, unique=True, validators=[django.core.validators.RegexValidator(message='Only letters (lower-case) and numbers are allowed here', regex='^[a-z0-9]+$')], verbose_name='Board directory')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Order')),
                ('default_name', models.CharField(default='Anonymous', max_length=32, verbose_name='Default Name')),
                ('max_replies', models.PositiveIntegerField(default=200, verbose_name='Max Replies')),
                ('max_length', models.PositiveIntegerField(default=2048, verbose_name='Max Lenght')),
                ('show_id', models.BooleanField(default=False, verbose_name='Show ID')),
                ('country_flags', models.BooleanField(default=False, verbose_name='Country Flags')),
                ('enable_captcha', models.BooleanField(default=False, verbose_name='Enable Captcha')),
                ('forced_anonymous', models.BooleanField(default=False, verbose_name='Forced Anonymous')),
                ('locked', models.BooleanField(default=False, verbose_name='Locked')),
                ('nsfw', models.BooleanField(default=True, verbose_name='NSFW')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Created at')),
            ],
            options={
                'verbose_name_plural': 'Boards',
                'verbose_name': 'Board',
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, verbose_name='Category name')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Order')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'verbose_name': 'Category',
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=256, verbose_name='Original Filename')),
                ('heigth', models.IntegerField(verbose_name='Heigth')),
                ('width', models.IntegerField(verbose_name='Width')),
                ('size', models.IntegerField(verbose_name='Size')),
                ('checksum', models.CharField(max_length=40, verbose_name='SHA1 checksum')),
                ('file', models.ImageField(height_field='heigth', upload_to=monki.boards.models.upload_to, verbose_name='File', width_field='width')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=90, null=True, verbose_name='Name')),
                ('tripcode', models.CharField(blank=True, max_length=90, null=True, verbose_name='Tripcode')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-Mail')),
                ('subject', models.CharField(blank=True, max_length=90, null=True, verbose_name='Subject')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('message_html', models.TextField(blank=True, editable=False, null=True, verbose_name='Message as HTML')),
                ('password', models.CharField(blank=True, max_length=90, verbose_name='Password')),
                ('ip_address', models.GenericIPAddressField(unpack_ipv4=True, verbose_name='IP Address')),
                ('user_agent', models.CharField(max_length=2048, verbose_name='User-Agent')),
                ('cid', models.CharField(help_text='Cookie based unique identifier for user.', max_length=90, verbose_name='CID')),
                ('stickied', models.BooleanField(default=False, verbose_name='Stickied')),
                ('locked', models.BooleanField(default=False, verbose_name='locked')),
                ('reviewed', models.BooleanField(default=False, verbose_name='Reviewed')),
                ('visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('bumped_at', models.DateTimeField(auto_now_add=True, verbose_name='Bumped at')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='boards.Board')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='boards.Post')),
            ],
            options={
                'verbose_name_plural': 'Posts',
                'verbose_name': 'Post',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_filename', models.CharField(max_length=256, verbose_name='Original Filename')),
                ('heigth', models.IntegerField(verbose_name='Heigth')),
                ('width', models.IntegerField(verbose_name='Width')),
                ('size', models.IntegerField(verbose_name='Size')),
                ('checksum', models.CharField(max_length=40, verbose_name='SHA1 checksum')),
                ('file', models.FileField(upload_to=monki.boards.models.upload_to, verbose_name='File')),
                ('image', models.ImageField(height_field='heigth', upload_to=monki.boards.models.upload_to, verbose_name='Image', width_field='width')),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='boards.Post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='image',
            name='post',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='boards.Post'),
        ),
        migrations.AddField(
            model_name='board',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boards', to='boards.Category'),
        ),
    ]
